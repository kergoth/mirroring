#!/usr/bin/env bash

PATH="$(cd "$(dirname "$0")" && pwd -P):$PATH"

set -euo pipefail

msg() {
    fmt="$1"
    # shellcheck disable=SC2059
    printf "$fmt\n" "$@" >&2
}

die() {
    msg "$@"
    exit 1
}

has() {
    command -v "$1" >/dev/null 2>&1
}

printcmd() {
    python3 -c 'import subprocess,sys; print(subprocess.list2cmdline(sys.argv[1:]))' "$@"
}

run() {
    if [ -n "$verbose" ]; then
        printf '❯ %s\n' "$(printcmd "$@")" >&2
    fi
    if [ -z "$dry_run" ]; then
        command "$@"
    fi
}

url_dest() {
    local url=$1
    dest="${url#*://}"
    case "$dest" in
        */) ;;
        *)
            dest="$(dirname "$dest")"
            ;;
    esac
    echo "$dest"
}

list_paths_from_sync() {
    grep '^./Collections/Simtel/Combined/' "$topdir/sync.txt" \
        | while read -r combined _ url destdir args; do
            case "$combined" in
                \#*)
                    continue
                    ;;
            esac

            #combined="$topdir/${combined%/}"
            combined="$topdir/work/Merged"
            if has unfurl; then
                ldest="$(echo "$url" | unfurl format '%d%p')"
            else
                ldest="$(url_dest "${url%/}/")"
            fi
            dest="$topdir/work/${ldest%/}"

            if [ -d "$dest" ]; then
                printf '%s\n' "$dest/."
            fi
        done
}

topdir="$(pwd -P)"

{
    list_paths_from_sync
    for arg in "$@"; do
        if [ -n "$arg" ] && [ -d "$arg" ]; then
            printf '%s\n' "${arg%/}/."
        fi
    done
} \
    | tr '\n' '\0' \
    | xargs -0o first-to-last "$topdir/work/NewCombined/" archive-cp -iv
