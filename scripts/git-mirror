#!/usr/bin/env bash

set -euo pipefail

scriptdir=$(cd "$(dirname "$0")" && pwd)

# shellcheck source=./common.sh
. "$scriptdir/common.sh"

process_arguments() {
    ARGS=${GIT_ARGS:-}
    common_process_arguments "$@"
    shift $((OPTIND - 1))

    ORIG_OPTIND=$OPTIND
    OPTIND=0
    branch=main
    while getopts b:h opt; do
        case "$opt" in
            b)
                branch="$OPTARG"
                ;;
            \? | h)
                usage
                ;;
        esac
    done
    shift $((OPTIND - 1))

    OPTIND=$((OPTIND + ORIG_OPTIND - 1))
}

process_arguments "$@"
shift $((OPTIND - 1))

repo=$1
shift
if [ $# -ne 0 ]; then
    dest=$1
    shift
else
    dest="$(echo "$repo" | sed -e 's#/$##; s#\.git$##; s#.*/##;')"
fi

if [ -n "$directory" ]; then
    mkdir -p "$directory"
    cd "$directory"
fi

if [ -e "$dest/.done" ] && [ -z "$update" ]; then
    exit 0
fi

if ! [ -d "$dest/.git" ]; then
    if [ "$dest" = . ]; then
        git init
        git remote add origin "$repo"
        git fetch --all --tags --force "$@"
        git checkout -b "$branch" origin/"$branch"
        if [ -e .gitmodules ]; then
            git submodule update --init --recursive
        fi
    else
        git clone --recursive "$repo" "$dest" -- "$@"
    fi
else
    (
        cd "$dest"
        git fetch --all --tags --force
        git pull
    )
fi

touch "$dest/.done"
